apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: {{ .Values.database.replicaCount }}
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: {{ .Values.database.image }}
          ports:
            - containerPort: {{ .Values.database.port }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: backend-env
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: MYSQL_PASSWORD
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/mysql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d/data.sql
              subPath: data.sql
            - name: my-cnf
              mountPath: /etc/my.cnf
              subPath: my.cnf
        
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init-sql
          configMap:
            name: db-init-sql
        - name: my-cnf
          configMap:
            name: db-my-cnf

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-db
  labels:
    app: mysql-db
spec:
  type: {{ .Values.database.service.type }}
  ports:
    - port: {{ .Values.database.service.port }}
      targetPort: {{ .Values.database.port }}
  selector:
    app: mysql-db